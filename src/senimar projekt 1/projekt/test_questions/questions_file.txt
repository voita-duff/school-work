

**Otázka:** Jaký klíčový výraz se používá k vytvoření cyklu `for` v Pythonu?  
0; while  
1; for  
0; loop  
0; iterate  

**Otázka:** Co znamená `range(5)` v cyklu `for`?  
1; Vygeneruje čísla od 0 do 4.  
0; Vygeneruje čísla od 1 do 5.  
0; Vytvoří seznam obsahující jen číslo 5.  
0; Neudělá nic, je to chybný příkaz.  

**Otázka:** Jaký klíčový výraz se používá k vytvoření cyklu `while` v Pythonu?  
0; for  
0; loop  
1; while  
0; repeat  

**Otázka:** Co se stane, když se `while` podmínka nikdy nestane `False`?  
0; Cyklus se spustí pouze jednou.  
0; Cyklus se nespustí vůbec.  
1; Cyklus poběží nekonečně dlouho.  
0; Python vyvolá chybu.  

**Otázka:** Který příkaz se používá k okamžitému ukončení cyklu?  
0; exit  
1; break  
0; continue  
0; stop  

**Otázka:** Co dělá příkaz `continue` v cyklu?  
0; Ukončí celý cyklus.  
0; Ukončí program.  
1; Přeskočí aktuální iteraci a pokračuje dalším průchodem cyklu.  
0; Způsobí chybu.  

**Otázka:** Co vrátí funkce `range(3)`?  
1; Sekvenci čísel od 0 do 2.  
0; Sekvenci čísel od 1 do 3.  
0; Sekvenci čísel od 0 do 3.  
0; Sekvenci obsahující pouze číslo 3.  

**Otázka:** Jakým způsobem lze iterovat přes prvky seznamu?  
1; Použitím cyklu `for`.  
0; Použitím cyklu `while`.  
0; Použitím funkce `repeat`.  
0; Pomocí klíčového slova `loop`.  

**Otázka:** Co znamená podmínka v cyklu `while`?  
0; Je to příkaz k opakování.  
1; Je to logická podmínka, která určuje, kdy cyklus skončí.  
0; Je to volání funkce.  
0; Určuje počet iterací cyklu.  

**Otázka:** Jaký bude výsledek použití `break` v cyklu?  
1; Cyklus se okamžitě ukončí.  
0; Cyklus se znovu spustí od začátku.  
0; Cyklus se zastaví až po další iteraci.  
0; Cyklus bude pokračovat bez přerušení.  

**Otázka:** Jaký typ hodnot lze iterovat pomocí `for` v Pythonu?  
1; Seznamy, řetězce a rozsahy (`range`).  
0; Pouze seznamy.  
0; Pouze čísla.  
0; Pouze řetězce.  

**Otázka:** Co označuje proměnná v cyklu `for`?  
0; Počet iterací.  
0; Typ dat v cyklu.  
1; Aktuální prvek při iteraci.  
0; Konec cyklu.  

**Otázka:** Co se stane, pokud je v cyklu `while` podmínka od začátku `False`?  
0; Cyklus se provede alespoň jednou.  
1; Cyklus se neprovede vůbec.  
0; Cyklus vyvolá chybu.  
0; Python zastaví celý program.  

**Otázka:** Jaký je rozdíl mezi `for` a `while`?  
1; `for` iteruje přes sekvenci, zatímco `while` pokračuje, dokud je podmínka pravdivá.  
0; `for` kontroluje podmínku, zatímco `while` iteruje přes sekvenci.  
0; Oba cykly fungují stejně.  
0; `while` lze použít jen pro seznamy.  

**Otázka:** Co se stane, pokud není použit příkaz `break` v nekonečném cyklu?  
0; Cyklus automaticky skončí po deseti iteracích.  
1; Cyklus bude běžet nekonečně dlouho.  
0; Cyklus bude generovat chybu při každé iteraci.  
0; Python ukončí program automaticky.  